

#include <Adafruit_NeoPixel.h>
#include <AnalogTouch.h>
#ifdef __AVR__
 #include <avr/power.h> 
#endif


#define LED_PIN    7
#define pinAnalog4 A1
#define pinAnalog5 A3
#define pinAnalog6 A5


#define LED_COUNT 60

#if offset > 6
#error "Too big offset value"
#endif

Adafruit_NeoPixel strip(LED_COUNT, LED_PIN, NEO_GRB + NEO_KHZ400);


void setup() {

//#if defined(__AVR_ATtiny85__) && (F_CPU == 16000000)
//  clock_prescale_set(clock_div_1);
//#endif

  strip.begin();           
  strip.show();            
  strip.setBrightness(50);
  Serial.begin(9600);
}




void loop() {
   uint16_t value4 = analogTouchRead(pinAnalog4);
  uint16_t value5 = analogTouchRead(pinAnalog5);
  uint16_t value6 = analogTouchRead(pinAnalog6);
  
  static uint16_t ref = 0xFFFF;
   if (value4 < (ref >> offset))
    ref = (value4 << offset);
  // Cool down
  else if (value4 > (ref >> offset))
    ref++;

   else if (value5 < (ref >> offset))
    ref = (value5 << offset);
  // Cool down
  else if (value5 > (ref >> offset))
    ref++;

    else if (value6 < (ref >> offset))
    ref = (value6 << offset);
  // Cool down
  else if (value6 > (ref >> offset))
    ref++;
    
   Serial.println("\t");
     Serial.print(value4 );
 Serial.print("\t");
  Serial.print(value5 );
 Serial.print("\t");
  Serial.print(value6 - (ref >> offset));
 Serial.print("\t");
  delay(100);
if(value5>690)
{
/
  colorWipe(strip.Color(  0,   0, 255), 50); // Blue
}
if(value4 >690)
{

  theaterChase(strip.Color(127, 127, 127), 50); // White, half brightness
//  theaterChase(strip.Color(127,   0,   0), 50); // Red, half brightness
//  theaterChase(strip.Color(  0,   0, 127), 50); // Blue, half brightness
}
if(value6-(ref>>offset)>250)
{
  rainbow(5);             
  theaterChaseRainbow(10); 
}



void colorWipe(uint32_t color, int wait) {
  for(int i=0; i<strip.numPixels(); i++) { // For each pixel in strip...
    strip.setPixelColor(i, color);         //  Set pixel's color (in RAM)
    strip.show();                          //  Update strip to match
    delay(wait);                           //  Pause for a moment
  }
}


void theaterChase(uint32_t color, int wait) {
  for(int a=0; a<10; a++) {  // Repeat 10 times...
    for(int b=0; b<3; b++) { //  'b' counts from 0 to 2...
      strip.clear();         //   Set all pixels in RAM to 0 (off)
      // 'c' counts up from 'b' to end of strip in steps of 3...
      for(int c=b; c<strip.numPixels(); c += 3) {
        strip.setPixelColor(c, color); // Set pixel 'c' to value 'color'
      }
      strip.show(); // Update strip with new contents
      delay(wait);  // Pause for a moment
    }
  }
}


void rainbow(int wait) {
  
  for(long firstPixelHue = 0; firstPixelHue < 5*65536; firstPixelHue += 256) {
    for(int i=0; i<strip.numPixels(); i++) { // For each pixel in strip...
     
      int pixelHue = firstPixelHue + (i * 65536L / strip.numPixels());
      
      strip.setPixelColor(i, strip.gamma32(strip.ColorHSV(pixelHue)));
    }
    strip.show(); 
    delay(wait);  
  }
}


void theaterChaseRainbow(int wait) {
  int firstPixelHue = 0;    
  for(int a=0; a<30; a++) {  
    for(int b=0; b<3; b++) { 
      strip.clear();         
     
      for(int c=b; c<strip.numPixels(); c += 3) {
      
        
        int      hue   = firstPixelHue + c * 65536L / strip.numPixels();
        uint32_t color = strip.gamma32(strip.ColorHSV(hue)); // hue -> RGB
        strip.setPixelColor(c, color); 
      }
      strip.show();                
      delay(wait);                 
      firstPixelHue += 65536 / 90; 
    }
   
  }
}
